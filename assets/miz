#!/bin/lua

local function x(cmd)
	os.execute(cmd)
end

local function ipkg(pkg)
	x("sudo pacman -S " .. pkg)
end

local function ypkg(pkg)
	x("yay -S " .. pkg)
end

local idesk_ref = {
	["budgie"] = { ipkg, "budgie-desktop" },
	["cinnamon"] = { ipkg, "cinnamon" },
	["cutefish"] = { ipkg, "cutefish" },
	["deepin"] = { ipkg, "deepin" },
	["enlightenment"] = { ipkg, "enlightenment" },
	["gnome"] = { ipkg, "gnome" },
	["gnome-flashback"] = { ipkg, "gnome-flashback" },
	["kde"] = { ipkg, "plasma" },
	["lxde"] = { ipkg, "lxde" },
	["lxqt"] = { ipkg, "lxqt" },
	["mate"] = { ipkg, "mate" },
	["sugar"] = { ipkg, "sugar sugar-fructose" },
	["ukui"] = { ipkg, "ukui" },
	["xfce"] = { ipkg, "xfce4" },
	["cde"] = { ypkg, "cdesktopenv" },
	["ede"] = { ypkg, "ede" },
	["kde1"] = { ypkg, "kde1-kdebase-git" },
	["liri"] = { ypkg, "liri-shell-git" },
	["lumina"] = { ypkg, "lumina-desktop" },
	["moksha"] = { ypkg, "moksha-git" },
	["pantheon"] = { ypkg, "pantheon-session-git" },
	["paperde"] = { ypkg, "paperde" },
	["phosh"] = { ypkg, "phosh" },
	["plasma-mobile"] = { ypkg, "plasma-mobile" },
	["thedesk"] = { ypkg, "thedesk" },
	["trinity"] = { ipkg, "trinity" },
	["maui-shell"] = { ypkg, "maui-shell-git" }
}

local wm_ref = {
	["2bwm"] = { ypkg, "2bwm" },
	["9wm"] = { ypkg, "9wm" },
	["afterstep"] = { ypkg, "afterstep-git" },
	["berry"] = { ypkg, "berry-git" },
	["blackbox"] = { ipkg, "blackbox" },
	["compiz"] = { ipkg, "compiz" },
	["cwm"] = { ypkg, "cwm" },
	["eggwm"] = { ypkg, "eggwm" },
	["enlightenment"] = { ipkg, "enlightenment" },
	["evilwm"] = { ypkg, "evilwm" },
	["fluxbox"] = { ipkg, "fluxbox" },
	["flwm"] = { ypkg, "flwm" },
	["fvwm"] = { ypkg, "fvwm" },
	["gala"] = { ipkg, "gala" },
	["goomwwm"] = { ypkg, "goomwwm" },
	["icewm"] = { ipkg, "icewm" },
	["jbwm"] = { ypkg, "jbwm" },
	["jwm"] = { ipkg, "jwm" },
	["karmen"] = { ypkg, "karmen" },
	["kwin"] = { ipkg, "kwin" },
	["lwm"] = { ipkg, "lwm" },
	["marco"] = { ipkg, "marco" },
	["metacity"] = { ipkg, "metacity" },
	["muffin"] = { ipkg, "muffin" },
	["mutter"] = { ipkg, "mutter" },
	["mwm"] = { ipkg, "openmotif" },
	["openbox"] = { ipkg, "openbox" },
	["pawm"] = { ypkg, "pawm" },
	["pekwm"] = { ipkg, "pekwm" },
	["sawfish"] = { ypkg, "sawfish" },
	["sowm"] = { ypkg, "sowm" },
	["tinywm"] = { ypkg, "tinywm" },
	["twm"] = { ipkg, "xorg-twm" },
	["ukwm"] = { ipkg, "ukwm" },
	["uwm"] = { ypkg, "ude" },
	["wind"] = { ypkg, "windwm" },
	["windowlab"] = { ypkg, "windowlab" },
	["windowmaker"] = { ypkg, "windowmaker" },
	["wm2"] = { ypkg, "wm2" },
	["worm"] = { ypkg, "worm-git" },
	["xfwm"] = { ipkg, "xfwm4" },
	["bspwm"] = { ipkg, "bspwm" },
	["exwm"] = { ypkg, "exwm-git" },
	["herbstluftwm"] = { ipkg, "herbstluftwm" },
	["i3"] = { ipkg, "i3-wm" },
	["larswm"] = { ypkg, "larswm" },
	["leftwm"] = { ypkg, "leftwm" },
	["notion"] = { ipkg, "notion" },
	["ratpoison"] = { ipkg, "ratpoison" },
	["stumpwm"] = { ipkg, "stumpwm" },
	["subtle"] = { ypkg, "subtle-hg" },
	["wmfs2"] = { ypkg, "wmfs2-git" },
	["awesome"] = { ipkg, "awesome" },
	["dwm"] = { ypkg, "dwm" },
	["echinus"] = { ypkg, "echinus" },
	["frankenwm"] = { ypkg, "frankenwm" },
	["i3-gaps"] = { ipkg, "i3-gaps" },
	["spectrwm"] = { ipkg, "spectrwm" },
	["qtile"] = { ipkg, "qtile" },
	["xmonad"] = { ipkg, "xmonad" },
}

local function idesk(desk)
	local ref = idesk_ref[desk]

	if ref then
		ref[1](ref[2])
	else
		print("! Error ! Desktop Environment not found!")
	end
end

local function iwm(wm)
	local ref = wm_ref[wm]

	if ref then
		ref[1](ref[2])
	else
		print("! Error ! Window Manager not found!")
	end
end


if arg[1] == "service" then
	if arg[2] == "link" then
		x("sudo ln -s /etc/runit/sv/" .. arg[3] .. " /run/runit/service/")
	elseif arg[2] == "unlink" then
		x("sudo rm /run/runit/service/" .. arg[3])
	elseif arg[2] == "disable" then
		x("sudo touch /run/runit/service/" .. arg[3] .. "/down")
	elseif arg[2] == "enable" then
		x("sudo rm /run/runit/service/" .. arg[3] .. "/down")
	elseif arg[2] == "start" then
		x("sudo sv start " .. arg[3])
	elseif arg[2] == "stop" then
		x("sudo sv stop " .. arg[3])
	elseif arg[2] == "restart" then
		x("sudo sv restart " .. arg[3])
	elseif arg[2] == "list" then
		if arg[3] == "installed" then
			x("ls /etc/runit/sv/")
		elseif arg[3] == "linked" then
			x("ls /run/runit/service/")
		end
	end
elseif arg[1] == "pac" then
	if arg[2] == "fetch" then
		ipkg(arg[3])
	elseif arg[2] == "remove" then
		x("sudo pacman -R " .. arg[3])
	elseif arg[2] == "sync" then
		x("sudo pacman -Sy")
	elseif arg[2] == "update" then
		print("STOOOOOOPPPPPPPPP")
	end
elseif arg[1] == "aur" then
	if arg[2] == "fetch" then
		ypkg(arg[3])
	elseif arg[2] == "remove" then
		x("yay -R " .. arg[3])
	elseif arg[2] == "update" then
		x("yay -Syu")
	end
elseif arg[1] == "desktop" then
	if arg[2] == "list" then
		print("List of Desktop Environments:")
		print(" ")
		print(" ")
		print("Officially supported:")
		print("budgie")
		print("cinnamon")
		print("cutefish")
		print("deepin")
		print("enlightenment")
		print("gnome")
		print("gnome-flashback")
		print("kde")
		print("lxde")
		print("lxde")
		print("mate")
		print("sugar")
		print("ukui")
		print("xfce")
		print(" ")
		print("Unofficially supported:")
		print("! Warining ! Unofficially supported Desktop Environments are usually downloaded from the AUR and may be unstable or broken!")
		print("cde")
		print("ede")
		print("kde1")
		print("liri")
		print("lumina")
		print("moksha")
		print("pantheon")
		print("paperde")
		print("phosh")
		print("plasma-mobile")
		print("thedesk")
		print("trinity")
		print("maui-shell")
	elseif arg[2] == "fetch" then
		idesk(arg[3])
	end
elseif arg[1] == "wm" then
	if arg[2] == "list" then
		print("List of Window Managers:")
		print("! Warning ! Window managers are usually used by advanced users, use caution!")
		print(" ")
		print(" ")
		print("Stacking:")
		print("2bwm")
		print("9wm")
		print("afterstep")
		print("berry")
		print("blackbox")
		print("compiz")
		print("cwm")
		print("eggwm")
		print("enlightenment")
		print("evilwm")
		print("fluxbox")
		print("flwm")
		print("fvwm")
		print("gala")
		print("goomwwm")
		print("icewm")
		print("jbwm")
		print("jwm")
		print("karmen")
		print("kwin")
		print("lwm")
		print("marco")
		print("metacity")
		print("muffin")
		print("mutter")
		print("mwm")
		print("openbox")
		print("pawm")
		print("pekwm")
		print("sawfish")
		print("sowm")
		print("tinywm")
		print("twm")
		print("ukwm")
		print("uwm")
		print("wind")
		print("windowlab")
		print("windowmaker")
		print("wm2")
		print("worm")
		print("xfwm")
		print(" ")
		print("Tiling:")
		print("bspwm")
		print("exwm")
		print("herbstluftwm")
		print("i3")
		print("larswm")
		print("leftwm")
		print("notion")
		print("ratpoison")
		print("stumpwm")
		print("subtle")
		print("wmfs2")
		print(" ")
		print("Dynamic:")
		print("awesome")
		print("dwm")
		print("echinus")
		print("frankenwm")
		print("i3-gaps")
		print("spectrwm")
		print("qtile")
		print("xmonad")
	elseif arg[2] == "fetch" then
		iwm(arg[3])
	end
elseif arg[1] == "info" then
	if arg[2] == "help" then
		print(" ")
		print("https://github.com/Mizosu97/mizOS")
		print(" ")
	elseif arg[2] == "creator" then
		print(" ")
		print("https://sudev.neocities.org")
		print(" ")
	end
elseif arg[1] == "system" then
	if arg[2] == "update" then
		print("Update mizOS? Y/N")
		if io.read() == "Y" then
			x("rm -rf $HOME/Documents/mizOS")
			x("cd $HOME/Documents && git clone https://github.com/Mizosu97/mizOS")
			x("sudo rm /usr/bin/miz")
			x("rm -rf $HOME/.config/youri3backup")
			x("rm -rf $HOME/.config/yourpicombackup")
			x("cd $HOME/Documents/mizOS")
			x("cd $HOME/Documents/mizOS && ./install")
		end
	end
else
	print("! Error ! Invalid command!")
end

















